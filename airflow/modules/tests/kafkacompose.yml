---
version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    #build: ../../../kafka
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker
    ports:
    # To learn about configuring Kafka for access across networks see
    # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "9092:9092"
      - "29092:29092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,PLAINTEXT_INTERNAL://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      #KAFKA_HEAP_OPTS: "-Xmx512m -Xms512m"
      KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: "false"
    volumes:
      - ../../../kafka:/home/appuser
    command:
      - ./create_default_topic.sh



  schema-registry:
    container_name: schema-registry
    image: confluentinc/cp-schema-registry:7.2.1
    environment:
      - SCHEMA_REGISTRY_HOST_NAME=schema-registry
      - SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL=zookeeper:2181
      - SCHEMA_REGISTRY_LISTENERS=http://localhost:8081
      - SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL=WARN
      - SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS=PLAINTEXT://broker:9092
    depends_on:
      - broker


  connect:
    container_name: connect
    build: ../../../connect
    hostname: connect
    environment:
      - CONNECT_REST_ADVERTISED_HOST_NAME=connect
      - CONNECT_SCHEMA_REGISTRY_URL=http://schema-registry:8081
      - CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL=http://schema-registry:8081
      - CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL=http://schema-registry:8081
      - CONNECT_BOOTSTRAP_SERVERS=broker:9092
    ports:
      - 8083:8083
    #volumes:
      #- ../../../connect/connectors:/etc/kafka-connect/connectors
    depends_on:
      - broker
      - mongo
      #- minio
      #- elasticsearch

    #command:
     # - ./register_connectors.sh


  #elasticsearch:
  #  container_name: elasticsearch
  #  build: ../../../elastic
  #  restart: unless-stopped
  #  ulimits:
  #    memlock:
  #      soft: -1
  #      hard: -1
  #  ports:
  #    - 9200:9200

 #minio:
 #  container_name: minio
 #  build: ../../../minio
 #  ports:
 #    - 9000:9000
 #  environment:
 #    - MINIO_ACCESS_KEY=minio
 #    - MINIO_SECRET_KEY=minio-secret-key
 #    - DEFAULT_BUCKET=rssnews


  mongo:
    container_name: mongo
    image: mongo:5.0.12
    command: ["mongod", "--replSet", "rs0", "--auth"]
    #chmod 400 /data/db/key/key1
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
    ports:
      - 27017:27017
    volumes:
      - ./mongodb_data_container:/data/db
      - ../../../mongo/init.sh:/usr/local/bin/init.sh